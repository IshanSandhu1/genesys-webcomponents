"""This module contains envoy rds config"""
from typing import Any, List, Optional, Dict


# pylint: disable=E1136
def route(prefix: str, cluster_name: str, timeout_seconds: Optional[int] = None) -> Dict[str, Any]:
    """
    A function to generate a route envoy configuration

    :param prefix: The prefix to which envoy would route traffic to.
    :param cluster_name: The name of the cluster to which envoy should route traffic to.
    :param timeout_seconds: The route timeout in seconds.

    :return: Envoy route configuration
    """
    route_obj = {
        'cluster': cluster_name,
    }
    if timeout_seconds is not None:
        route_obj.update({'timeout': f'{timeout_seconds}s'})

    return {
        'match': {
            'prefix': prefix
        },
        'route': route_obj
    }


def route_configuration_resource(
        route_name: str,
        routes: List[Dict[str, Any]]) -> Dict[str, Any]:
    """
    A function to generate envoy route configuration resource

    :param route_name: name of the route configuration
    :param routes: A list of routes assigned to the route configuration

    :return: Envoy route configuration resource
    """
    return {
        '@type': 'type.googleapis.com/envoy.config.route.v3.RouteConfiguration',
        'name': route_name,
        'virtual_hosts': [
            {
                'name': 'all_domains',
                'domains': ['*'],
                'routes': routes
            }
        ]
    }


def rds(route_configuration_resources: List[Dict[str, Any]]) -> Dict[str, Any]:
    """
    A function to generate envoy route discovery service file content.

    :param route_configuration_resources: A list of route configuration to include in the rds file

    :return: Envoy route discovery file content.
    """
    return {
        'version_info': '0',
        'resources': route_configuration_resources
    }
