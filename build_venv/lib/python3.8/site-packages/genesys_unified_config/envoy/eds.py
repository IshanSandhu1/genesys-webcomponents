"""This module contains envoy eds config"""
from typing import Any, List, Dict, Union

from genesys_unified_config.envoy.common import socket_address


# pylint: disable=E1136
def endpoint(address: str, port: Union[int, str]) -> Dict[str, Any]:
    """
    A function to generate an envoy endpoint configuration

    :param address: The IP address on which the endpoint listens
    :param port: The port on which the endpoint listens

    :return: Envoy endpoint configuration
    """
    return {
        'endpoint': {
            'address': socket_address(address=address, port=port)
        }
    }


def eds_resource(cluster_name: str, endpoints: List[Dict[str, Any]]) -> Dict[str, Any]:
    """
    A function to generate a single envoy load balanced resources

    :param cluster_name: name of envoy cluster to which this resource belongs.
    :param endpoints: A list of endpoint belonging to this cluster.

    :return: Envoy endpoint resource configuration
    """
    return {
        '@type': 'type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment',
        'cluster_name': cluster_name,
        'endpoints': [
            {
                'lb_endpoints': endpoints
            }
        ]
    }


def eds(resources: List[Dict[str, Any]]) -> Dict[str, Any]:
    """
    A function to generate content for endpoint discovery service file.

    :param resources: A list of envoy endpoint resource to add to the eds file.

    :return: Envoy endpoint discovery service file content
    """
    return {
        'version_info': '0',
        'resources': resources
    }
