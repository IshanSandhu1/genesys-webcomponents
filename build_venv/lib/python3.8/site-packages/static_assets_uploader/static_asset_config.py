"""
Helper which merges the config file with unified config and loads the config for us
"""
import click
from genesys_unified_config import UnifiedConfig
from marshmallow import ValidationError

from .exceptions import InvalidStaticAssetConfigException


class StaticAssetConfig:
    """ Static asset config model """

    def __init__(self, root_path, cluster_name=None):
        # pylint: disable=C0301
        click.echo(f'{click.style(f" Getting the config from the unified config root path {root_path}", fg="green")}', color=True)
        self.config_parser = UnifiedConfig(repo_path=str(root_path))
        try:
            self.config = self.config_parser.get_config()
            self.service_name = self.config.get('service').get('name')
            if cluster_name:
                self.config_parser.validate_cluster_name_service_name(self.service_name, cluster_name)
        except ValidationError as error_loading_config:
            click.echo(f'{click.style(f"There was an exception loading the config-{error_loading_config}", fg="red")}', color=True)
            raise InvalidStaticAssetConfigException(f"There was an exception loading the static "
                                                    f"asset config - {error_loading_config}")

    def get_config(self):
        """
        :return: The staticAssets config from the unified config
        """
        return self.config.get('artifacts', {}).get('staticAssets', {})

    def get_src(self, key):
        """
        :return: The src path from the static asset config
        """
        return self.get_config().get('assets', {}).get(key).get('src', {})

    def get_release_config(self, key):
        """
        :return: The release config for the specified key
        """
        return self.get_config().get('assets', {}).get(key).get('release', {}).get('default', {})

    def get_promote_config(self, key):
        """
        :return: The promote config from the staticAssets config
        """
        return self.get_config().get('assets', {}).get(key).get('promote', {}).get('default', {})

    def get_actions_in_config(self, config):
        """
        :param config: The release/promote config from the static asset config file
        :return: list of actions specified
        """
        return config.get('actions', [])

    def get_release_actions(self, key):
        """ Get the release config for a specific asset"""
        return self.get_config().get('assets', {}).get(key).get('release', {}).get('default', {}).get('actions', [])

    def get_promote_actions(self, key):
        """ Get the promote config for a specific asset"""
        return self.get_config().get('assets', {}).get(key).get('promote', {}).get('default', {}).get('actions', [])
