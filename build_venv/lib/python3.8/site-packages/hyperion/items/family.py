"""Item and Interface for families"""

from typing import Generator

from hyperion.items.base_item import Item, Interface


class FamilyInterface(Interface):
    """Interface for families"""

    @property
    def item_type(self) -> str:
        """The item type represented by this interface"""
        return 'family'

    # pylint: disable=arguments-differ
    def iterate(
            self,
            expanded: bool = False,
            name_only: bool = False,
            **_
    ) -> Generator[Item, None, None]:
        """
        Iterates over families matching the provided filter(s)
        :param expanded: If True, iterates over expanded families
        :param name_only: If True, iterates over families which only contain the name
        :param _: Placeholder for filters
            (no filters are available on families, but at least one filter is required by ABC)
        :return: A generator that will iterate over and load/expand families
        """
        yield from self._list_all(
            expanded=expanded,
            name_only=name_only
        )
