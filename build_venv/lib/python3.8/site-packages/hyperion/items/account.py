"""Item and Interface for Accounts"""

from typing import Generator

from hyperion.items.base_item import Item, Interface


class AccountInterface(Interface):
    """Interface for accounts"""

    @property
    def item_type(self) -> str:
        """The item type represented by this interface"""
        return 'account'

    # pylint: disable=arguments-differ
    def iterate(
            self,
            expanded: bool = False,
            name_only: bool = False,
            account_id: str = None,
            ecosystem: str = None,
            environment: str = None,
            family: str = None,
            ou: str = None
    ) -> Generator[Item, None, None]:
        """
        Iterates over accounts matching the provided filter(s)
        :param expanded: If True, iterates over expanded accounts
        :param name_only: If True, iterates over accounts which only contain the name
        :param account_id: The optional accountId filter
        :param ecosystem: The optional ecosystem filter
        :param environment: The optional environment filter
        :param family: The optional family filter
        :param ou: The optional ou filter
        :return: A generator that will iterate over and load/expand accounts
        """
        yield from self._list_all(
            expanded=expanded,
            name_only=name_only,
            account_id=account_id,
            ecosystem=ecosystem,
            environment=environment,
            family=family,
            ou=ou
        )
