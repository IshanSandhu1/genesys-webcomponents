"""Item and Interface for Habitats"""

from typing import Generator

from hyperion.items.base_item import Item, Interface


class HabitatInterface(Interface):
    """Interface for habitats"""

    @property
    def item_type(self) -> str:
        """The item type represented by this interface"""
        return 'habitat'

    # pylint: disable=arguments-differ, too-many-arguments
    def iterate(
            self,
            expanded: bool = False,
            name_only: bool = False,
            account_id: str = None,
            account_name: str = None,
            active: bool = None,
            biome: str = None,
            deployable: bool = None,
            ecosystem: str = None,
            environment: str = None,
            family: str = None,
            ou: str = None,
            region: str = None,
            region_name: str = None,  # Legacy filter for backwards compatibility, clones region
            sort_key: int = None,
            sumo_account_name: str = None,
            cm_required: bool = None,
            expand_in_skynet_path: bool = None,
            static_asset_validation: bool = None
    ) -> Generator[Item, None, None]:
        """
        Iterates over habitats matching the provided filter(s)
        :param expanded: If True, iterates over expanded habitats
        :param name_only: If True, iterates over habitats which only contain the name
        :param account_id: The optional accountId filter
        :param account_name: The optional accountName filter
        :param active: The optional active filter
        :param biome: The optional pod filter
        :param deployable: The optional deployable filter
        :param ecosystem: The optional ecosystem filter
        :param environment: The optional environment filter
        :param family: The optional family filter
        :param ou: The optional ou filter
        :param region: The optional region filter
        :param region_name: The optional regionName filter (Legacy filter for backwards compatibility, clones region)
        :param sort_key: The optional sortKey filter
        :param sumo_account_name: The optional sumoAccountName filter
        :param cm_required: The optional cmRequired filter
        :param expand_in_skynet_path: The optional expandInSkynetPath filter
        :param static_asset_validation: The optional staticAssetValidation filter
        :return: A generator that will iterate over and load/expand habitats
        """
        yield from self._list_all(
            expanded=expanded,
            name_only=name_only,
            account_id=account_id,
            account_name=account_name,
            active=active,
            biome=biome,
            deployable=deployable,
            ecosystem=ecosystem,
            environment=environment,
            family=family,
            ou=ou,
            region=region,
            region_name=region_name,  # Legacy filter for backwards compatibility, clones region
            sort_key=sort_key,
            sumo_account_name=sumo_account_name,
            cm_required=cm_required,
            expand_in_skynet_path=expand_in_skynet_path,
            static_asset_validation=static_asset_validation
        )
